<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8">
  <title>Coop Resources — V1 (números + botones)</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap 5 CSS (CDN) -->
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
    rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
    crossorigin="anonymous"
  >

  <style>
    body { background: #0b1220; color: #e6e8ef; }
    .card { background: #121a2b; border: 1px solid #223150; }
    .brand { letter-spacing: .5px; }
    .resource-value { font-variant-numeric: tabular-nums; }
    .finished {
      background: linear-gradient(135deg, #0a7d40, #0f5132);
      color: #d1f5e1; border: 1px solid #198754;
    }
    .muted { color: #b8bfd3; }
    .badge-soft { background: #1b2742; color: #9fb4ff; }
    .btn-resource { min-width: 140px; }
    .small-note { font-size: .9rem; }
    .resource-counter {
      background: #1b2742;
      border: 1px solid #3d4956;
      border-radius: 0.5rem;
      padding: 1rem;
      text-align: center;
    }
    .resource-current {
      font-size: 2.5rem;
      font-weight: 700;
      color: #ffffff;
      line-height: 1;
      margin-bottom: 0.25rem;
    }
    .resource-total {
      font-size: 1rem;
      color: #9fb4ff;
      font-weight: 500;
    }
    .form-control:focus {
      background: #1b2742 !important;
      border-color: #4dabf7 !important;
      box-shadow: 0 0 0 0.25rem rgba(77, 171, 247, 0.25) !important;
      color: #ffffff !important;
    }
    .is-invalid {
      border-color: #dc3545 !important;
      box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25) !important;
    }
  </style>
</head>
<body>

  <!-- Navbar -->
  <nav class="navbar navbar-dark border-bottom border-secondary-subtle" style="background:#0b1220;">
    <div class="container">
      <a class="navbar-brand brand d-flex align-items-center gap-2" href="#">
        <span class="fw-bold">Coopera</span>
        <span class="badge rounded-pill text-bg-secondary">V1 (números)</span>
      </a>
      <div class="d-flex align-items-center gap-3">
        <span id="playerNameDisplay" class="muted">Jugador: <em>MatiasV</em></span>
        <button id="changeNameBtn" class="btn btn-sm btn-outline-light">Ingresar nombre</button>
      </div>
    </div>
  </nav>

  <!-- Main -->
  <input type="hidden" id="partidaId" value="@ViewBag.PartidaId" />     <!-- Id de la partida en juego-->
  <main class="container py-4">

    <!-- Estado de la partida -->
    <div id="stateBanner" class="alert alert-info border-0" role="alert">
      mensaje de <strong>EXITO</strong>
    </div>

    <div id="stateBanner" class="alert alert-danger border-0" role="alert">
      mensaje de <strong>ERROR</strong>
    </div>

        <!-- Tiempo de la partida  -->
    <div id="tiempoPartidaCompleta" class="text-center mt-3 d-none">
        <div class="alert finished fw-bold mb-0">
            ¡Partida terminada! Tiempo: <span id="tiempoPartidaValor"></span>
        </div>
    </div>


    <!-- Metas -->
    <div class="row g-3 mb-3" id="targetsRow">
      <div class="col-12 col-lg-4">
        <div class="card h-100">
          <div class="card-body d-flex flex-column text-center">
            <h5 class="card-title mb-3 text-white">Madera</h5>
            
            <div class="resource-counter mb-3">
              <div class="resource-current" id="maderaActual">0</div>
              <div class="resource-total">de <span id="woodTotal">@ViewBag.MetaMadera</span></div>
            </div>
            
            <p class="card-text muted small-note mb-4">Suma 1 por click.</p>
            <div class="mt-auto d-grid">
              <button id="btnRecolectarMadera" class="btn btn-primary btn-resource">
                +1 Madera
              </button>
            </div>
          </div>
        </div>
      </div>

      <div class="col-12 col-lg-4">
        <div class="card h-100">
          <div class="card-body d-flex flex-column text-center">
            <h5 class="card-title mb-3 text-white">Piedra</h5>
            
            <div class="resource-counter mb-3">
              <div class="resource-current" id="piedraActual">0</div>
              <div class="resource-total">de <span id="stoneTotal">@ViewBag.MetaPiedra</span></div>
            </div>
            
            <p class="card-text muted small-note mb-4">Suma 1 por click.</p>
            <div class="mt-auto d-grid">
              <button id="btnRecolectarPiedra" class="btn btn-warning btn-resource">
                +1 Piedra
              </button>
            </div>
          </div>
        </div>
      </div>

      <div class="col-12 col-lg-4">
        <div class="card h-100">
          <div class="card-body d-flex flex-column text-center">
            <h5 class="card-title mb-3 text-white">Comida</h5>
            
            <div class="resource-counter mb-3">
              <div class="resource-current" id="comidaActual">0</div>
              <div class="resource-total">de <span id="foodTotal">@ViewBag.MetaComida</span></div>
            </div>
            
            <p class="card-text muted small-note mb-4">Suma 1 por click.</p>
            <div class="mt-auto d-grid">
              <button id="btnRecolectarComida" class="btn btn-success btn-resource">
                +1 Comida
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Modal para cambiar nombre -->
  <div class="modal fade" id="changeNameModal" tabindex="-1" aria-labelledby="changeNameModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content" style="background: #121a2b; border: 1px solid #223150;">
        <div class="modal-header border-bottom border-secondary-subtle">
          <h5 class="modal-title text-white" id="changeNameModalLabel">Cambiar nombre</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="changeNameForm">
            <div class="mb-3">
              <label for="nombre" class="form-label text-white">Ingresa tu nombre:</label>
              <input 
                type="text" 
                class="form-control" 
                id="nombre" 
                placeholder="Ej: MatiasV"
                maxlength="20"
                required
                style="background: #1b2742; border: 1px solid #3d4956; color: #ffffff;"
              >
              <div class="form-text text-muted">Máximo 20 caracteres</div>
            </div>
          </form>
        </div>
        <div class="modal-footer border-top border-secondary-subtle">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <button type="button" class="btn btn-primary" id="acceptNameChange">Aceptar</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Bootstrap 5 JS Bundle (CDN) -->
  <script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"></script>

  <!-- JavaScript personalizado -->
<script>
document.addEventListener('DOMContentLoaded', function () {
  // botones de recolección
  const btnRecolectarMadera = document.getElementById('btnRecolectarMadera');
  const btnRecolectarPiedra = document.getElementById('btnRecolectarPiedra');
  const btnRecolectarComida = document.getElementById('btnRecolectarComida');

  // navbar y modal de nombre
  const changeNameBtn = document.getElementById('changeNameBtn');
  const changeNameModal = new bootstrap.Modal(document.getElementById('changeNameModal'));
  const nombreInput = document.getElementById('nombre');
  const acceptNameChangeBtn = document.getElementById('acceptNameChange');
  const playerNameDisplay = document.getElementById('playerNameDisplay');

  // contadores en cards
  const maderaActual = document.getElementById('maderaActual');
  const piedraActual = document.getElementById('piedraActual');
  const comidaActual = document.getElementById('comidaActual');

  // tiempo partida
  const tiempoPanel = document.getElementById('tiempoPartidaCompleta');
  const tiempoValor = document.getElementById('tiempoPartidaValor');

  // partida
  const partidaId = parseInt(document.getElementById('partidaId').value, 10);

  // aca va toda la parte del nombre del jugador 
  changeNameBtn.addEventListener('click', function () {
    nombreInput.value = '';
    changeNameModal.show();
    setTimeout(() => nombreInput.focus(), 300);
  });

  acceptNameChangeBtn.addEventListener('click', async () => {
    const nombre = (nombreInput.value || '').trim();
    if (!nombre) { nombreInput.classList.add('is-invalid'); return; }

    const formdata = new FormData();
    formdata.append('nombre', nombre);

    const res = await fetch('/Partida/GuardarJugador', { method: 'POST', body: formdata });
    if (!res.ok) { nombreInput.classList.add('is-invalid'); return; }

    const data = await res.json();
    if (data.ok) {
      playerNameDisplay.innerHTML = `Jugador: <em>${data.nombre}</em>`;
      nombreInput.classList.remove('is-invalid');
      changeNameModal.hide();
    }
  });

  //aca va la parte de recolección
  async function Recolectar(tipo) {
    const fd = new FormData();
    fd.append('tipo', String(tipo));       // aca se pasa el tipo de recurso que como es un enum se pasa como 0 1 o 2
    fd.append('partidaId', String(partidaId));

    const resp = await fetch('/Partida/Recolectar', { method: 'POST', body: fd });
    if (!resp.ok) {
      const err = await resp.text();
      alert('Error en la solicitud: ' + err);
      return;
    }

    const data = await resp.json();
    if (!data.ok) return;

    // actualizamos los contadores
    maderaActual.textContent = data.totales.madera;
    piedraActual.textContent = data.totales.piedra;
    comidaActual.textContent = data.totales.comida;

    // si individualmente llegan a la meta se deshabilita el boton
    if (data.metasAlcanzadas?.madera) btnRecolectarMadera.disabled = true;
    if (data.metasAlcanzadas?.piedra) btnRecolectarPiedra.disabled = true;
    if (data.metasAlcanzadas?.comida) btnRecolectarComida.disabled = true;

    // si todas las metas se completas van a estae desabilitados todos los botones y se muestra el tiempo
    if (data.completada) {
      btnRecolectarMadera.disabled = true;
      btnRecolectarPiedra.disabled = true;
      btnRecolectarComida.disabled = true;

      // tiempo de partida en mm:ss
      if (data.tiempoPartida) {
        tiempoValor.textContent = data.tiempoPartida;
        tiempoPanel.classList.remove('d-none');
      }
    }
  }

  // eventlistener de los botones de recursos
  btnRecolectarMadera.addEventListener('click', () => Recolectar(0));
  btnRecolectarPiedra.addEventListener('click', () => Recolectar(1));
  btnRecolectarComida.addEventListener('click', () => Recolectar(2));
});
</script>


</body>
</html>